{"version":3,"sources":["components/GeomagneticForm.js","components/GeomagneticPlot.js","components/GeomagneticDetails.js","libs/index.js","hooks/useDataApi.js","App.js","serviceWorker.js","index.js"],"names":["GeomagneticForm","props","station","setStation","sampling","setSampling","dataType","setDataType","date","setDate","react_default","a","createElement","Form","Row","Col","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","format","moment","as","parseFloat","GeomagneticPlot","data","components","averages","map","v","component","sum","reduce","b","total","getAverage","comps","idx","average","dataPlot","x","datetime","y","xaxis","yaxis","concat","mode","name","toUpperCase","toFixed","yaxisrange","Math","ceil","max","apply","Object","toConsumableArray","abs","title","zeroline","showdividers","range","fixedrange","meta","react_plotly_default","style","width","height","layout","yaxis2","yaxis3","grid","rows","length","columns","pattern","GeomagneticDetails","keys","key","Table","striped","bordered","hover","InvalidIAGA2002","Error","MissingComponent","calcInclination","h","z","atan2","PI","calcHorizontal","sqrt","pow","GeomagneticData","arguments","undefined","classCallCheck","this","_meta","_data","_this","val","d","cos","_this2","sin","f","_this3","_this4","_this5","libs","parseIAGA2002","content","lines","split","headers","forEach","line","search","substr","toLowerCase","push","trim","dataFetchReducer","state","action","objectSpread","isLoading","isError","payload","buildUrl","params","source","dataTypes","filename","directory","flat","paramReducer","useDataApi","initialParams","_useReducer","useReducer","assign","_useReducer2","slicedToArray","dispatchParams","_useReducer3","_useReducer4","dispatchFetch","useEffect","didCancel","_ref","asyncToGenerator","regenerator_default","mark","_callee","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","url","result","wrap","_context","prev","next","Symbol","iterator","done","axios","sent","abrupt","t0","t1","return","finish","stop","fetchData","actions","setSource","setFormat","App","_useState","useState","_useState2","setComponents","_useDataApi","Container","components_GeomagneticForm","isEmpty","Fragment","components_GeomagneticPlot","components_GeomagneticDetails","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48298616.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Col } from 'react-bootstrap';\nimport moment from 'moment';\n\nconst GeomagneticForm = (props) => {\n  const {\n    station,\n    setStation,\n    sampling,\n    setSampling,\n    dataType,\n    setDataType,\n    date,\n    setDate,\n  } = props;\n\n  return (\n    <Form>\n      <Form.Row>\n        <Col>\n          <Form.Group controlId=\"formStation\">\n            <Form.Label>Station</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"IAGA code\"\n              value={station}\n              onChange={(e) => setStation(e.target.value)}\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formDate\">\n            <Form.Label>Date</Form.Label>\n            <Form.Control\n              type=\"date\"\n              value={date.format(\"YYYY-MM-DD\")}\n              onChange={(e) => setDate(moment(e.target.value))}\n            />\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row>\n        <Col>\n          <Form.Group controlId=\"formSampling\">\n            <Form.Label>Sampling Period</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={sampling}\n              onChange={(e) => setSampling(parseFloat(e.target.value))}\n            >\n              <option value=\"60\">minute</option>\n              <option value=\"1\">second</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId=\"formDataType\">\n            <Form.Label>Data Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={dataType}\n              onChange={(e) => setDataType(e.target.value)}\n            >\n              <option>all</option>\n              <option>definitive</option>\n              <option>quasi-definitive</option>\n              <option>provisional</option>\n              <option>variation</option>\n            </Form.Control>\n          </Form.Group>\n        </Col>\n      </Form.Row>\n    </Form>\n  )\n};\n\nexport default GeomagneticForm;","import React from 'react';\nimport Plot from 'react-plotly.js';\n\n/**\n * Calculate average of component while ignore null elements\n */\nconst getAverage = component => {\n  const sum =  component.reduce((a,b) => (b === null) ? a : a+b, 0);\n  const total = component.reduce((a,b) => (b === null) ? a : a+1, 0);\n  return (total === 0) ? null : sum/total;\n};\n\n/**\n * Remove average from component\n */\nconst removeAverage = (component, average) => {\n  return component.map(v => (v === null) ? null : v - average );\n};\n\n\nconst GeomagneticPlot = (props) => {\n  const {\n    data,\n    components\n  } = props;\n\n  const averages = components.map(v => {\n    return getAverage(data[v]);\n  });\n\n  const comps = components.map((v, idx) => {\n    return removeAverage(data[v], averages[idx]);\n  });\n\n  const dataPlot = components.map((v, idx) => {\n    return {\n      x: data.datetime,\n      y: comps[idx],\n      xaxis: 'x',\n      yaxis: `y${idx+1}`,\n      type: 'scatter',\n      mode: 'line',\n      name: `${v.toUpperCase()} (${averages[idx].toFixed(2)} nT)`,\n    }\n  });\n\n  const yaxis = components.map((v, idx) => {\n    // round up to the nearest 10th for the yrange\n    const yaxisrange = Math.ceil(Math.max(...comps[idx].map(Math.abs))/10.0)*10;\n    return {\n      title: 'nT',\n      zeroline: false,\n      showdividers: false,\n      range: [-yaxisrange, yaxisrange],\n      fixedrange: true,\n    }\n  });\n\n  const title = `${data.meta['Station Name']} (${data.meta['IAGA CODE']})`\n\n  return (\n    <Plot\n      style={{\n        width: \"100%\",\n        height: 600,\n      }}\n      data={dataPlot}\n      layout={{\n        yaxis: yaxis[0],\n        yaxis2: yaxis[1],\n        yaxis3: yaxis[2],\n        title,\n        grid: {\n          rows: components.length,\n          columns: 1,\n          pattern: 'independant',\n        },\n      }}\n    />\n  );\n};\n\nexport default GeomagneticPlot;","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst GeomagneticDetails = (props) => {\n  const data = props.data;\n\n  const rows = Object.keys(data.meta).map( (key) => (\n    <tr key={key}>\n      <th>{key}</th>\n      <td>{data.meta[key]}</td>\n    </tr>\n  ));\n\n  return (\n    <details>\n      <summary>Additional Details</summary>\n      <Table striped bordered hover>\n        <tbody>\n          { rows }\n        </tbody>\n      </Table>\n    </details>\n  )\n};\n\nexport default GeomagneticDetails;","/**\n * @author Charles Blais <charles.blais@canada.ca>\n * @description\n *  Magnetic data library\n *  Parse common IAGA2002 format message\n */\n// Custom Errors\nclass InvalidIAGA2002 extends Error {};\nclass MissingComponent extends Error {};\n\nconst calcDeclination = (x, y) => Math.atan2(y, x) * (180.0 / Math.PI) * 60.0;\nconst calcInclination = (h, z) => Math.atan2(z, h) * (180.0 / Math.PI) * 60.0;\nconst calcHorizontal = (x, y) => Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\nconst calcNorth = (h, d) => h * Math.cos(d * ( Math.PI / 180.0 / 60.0 ));\nconst calcEast = (h, d) => h * Math.sin(d * ( Math.PI / 180.0 / 60.0 ));\n\n/**\n * Geomagnetic data handler and response\n */\nclass GeomagneticData {\n    /**\n     * @description\n     *  Handler for data object properties\n     * @param {Object} data \n     */\n    constructor(meta={}, data = {}) {\n        this._meta = meta;\n        this._data = data;\n    }\n\n    get isEmpty(){\n        return !Object.keys(this._meta).length;\n    }\n\n    get meta(){\n        return this._meta;\n    }\n\n    get data(){\n        return this._data;\n    }\n\n    get datetime(){\n        return this._data.datetime;\n    }\n\n    get x(){\n        if ('x' in this._data) {\n            return this._data.x;\n        } else if('h' in this._data && 'd' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return (val !== null && this._data.d[idx] !== null) ? calcNorth(val, this._data.d[idx]) : null;\n            });\n        }\n        throw new MissingComponent(\"Require x or (h and d) components\");\n    }\n\n    get y(){\n        if ('y' in this._data) {\n            return this._data.y;\n        } else if('h' in this._data && 'd' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return (val !== null && this._data.d[idx] !== null) ? calcEast(val, this._data.d[idx]) : null;\n            });\n        }\n        throw new MissingComponent(\"Require y or (h and d) components\");\n    }\n\n    get z(){\n        if ('z' in this._data ){\n            return this._data.z\n        }\n        throw new MissingComponent(\"Require z component\");\n    }\n\n    get f(){\n        if ('f' in this._data ){\n            return this._data.f\n        }\n        throw new MissingComponent(\"Require f component\");\n    }\n\n    get d(){\n        if ('d' in this._data) {\n            return this._data.d;\n        } else if('x' in this._data && 'y' in this._data) {\n            return this._data.x.map((val, idx) => {\n                return (val !== null && this._data.y[idx] !== null) ? calcDeclination(val, this._data.y[idx]) : null;\n            });\n        }\n        throw new MissingComponent(\"Require d or (x and y) components\");\n    }\n\n    get h(){\n        if ('h' in this._data) {\n            return this._data.h;\n        } else if('x' in this._data && 'y' in this._data) {\n            return this._data.x.map((val, idx) => {\n                return (val !== null && this._data.y[idx] !== null) ? calcHorizontal(val, this._data.y[idx]) : null;\n            });\n        }\n        throw new MissingComponent(\"Require h or (x and y) components\");\n    }\n\n    get i(){\n        if ('i' in this._data) {\n            return this._data['i'];\n        } else if('z' in this._data && 'h' in this._data) {\n            return this._data.h.map((val, idx) => {\n                return (val !== null && this._data.z[idx] !== null) ? calcInclination(val, this._data.z[idx]) : null;\n            });\n        } else if('z' in this._data && 'x' in this._data && 'y' in this._data) {\n            return this._data.x.map((val, idx) => {\n                return (val !== null && this._data.y[idx] !== null && this._data.z[idx] !== null) ? calcInclination(calcHorizontal(val, this._data.y[idx]), this._data.z[idx]) : null;\n            });\n        }\n        throw new MissingComponent(\"Require i or (z and h) or (z, x, and y) components\");\n    }\n\n}\n\n/**\n * Parse the content of the IAGA2002 string\n * @param {string} content \n * @returns GeomagneticData\n */\nconst parseIAGA2002 = content => {\n  const lines = content.split(\"\\n\");\n  let headers = [];\n  let data = {\n    'datetime': []\n  };\n  let meta = {};\n\n  // Loop each line of data\n  lines.forEach((line) => {\n    // Header line\n    if (line.search(/^DATE /) !== -1) {\n      line = line.split(/[ ]+/);\n      headers = [3,4,5,6].map(key => {\n        const component = line[key].substr(-1).toLowerCase();\n        data[component] = []; //initialize array\n        return component;\n      });\n    }\n    // Data line\n    else if (line.search(/^[0-9]{4}-[0-9]{2}-[0-9]{2}/) !== -1) {\n      if (headers.length !== 4) {\n        throw new InvalidIAGA2002(\"Missing elements in header\");\n      }\n      line = line.split(/[ ]+/);\n      data['datetime'].push(line[0] + \"T\" + line[1]);\n      headers.forEach((key, idx) => {\n        const value = parseFloat(line[idx+3]);\n        data[key].push((value > 80000) ? null : value);\n      });\n    }\n    // Meta information is any line spaced with a string\n    else if (line.search(/^ [A-Z]/) !== -1) {\n        meta[line.substr(0,22).trim()] = line.substr(23, line.length-23-2).trim();\n    }\n  });\n  return new GeomagneticData(meta, data);\n};\n\nexport default { parseIAGA2002, GeomagneticData };\n","import { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport libs from '../libs';\n\n\nconst FETCH_INIT = 'FETCH_INIT';\nconst FETCH_SUCCESS = 'FETCH_SUCCESS';\nconst FETCH_FAILURE = 'FETCH_FAILURE';\n/**\n * Reducer for URL fetching\n * @param {*} state - previous state\n * @param {*} action - action dispatched\n */\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_INIT:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case FETCH_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\n\n/**\n * Build the URL for query\n * @param {*} params - as found in param reducer\n */\nconst buildUrl = (params) => {\n  let {\n    source,\n    station,\n    sampling,\n    dataType,\n    format,\n    date,\n  } = params;\n\n  // Convert station\n  station = station.toLowerCase();\n\n  // Convert sampling\n  switch (sampling) {\n    case 60:\n      sampling = 'minute';\n      break;\n    case 1:\n      sampling = 'second';\n      break;\n    default:\n      throw new Error(\"Unknown sampling period\");\n  }\n\n  // convert data type\n  const dataTypes = (dataType === 'all') ? ['definitive','quasi-definitive','provisional','variation'] : [dataType];\n\n  // Convert date to moment if not yet done so\n  date = (date instanceof moment) ? date : moment(date);\n\n  return dataTypes.map(v => {\n    const filename = `${station}${date.format(\"YYYYMMDD\")}${dataType.substr(0,1)}${sampling.substr(0,3)}.${sampling.substr(0,3)}`;\n    const directory = `${source}/${sampling}/${dataType}/${format}/${date.format(\"YYYY/MM\")}/`;\n    return [\n      `${directory}${filename}.gz`,\n      `${directory}${filename}`\n    ];\n  }).flat();\n};\n\n\nconst SET_SOURCE = 'SET_SOURCE';\nconst SET_STATION = 'SET_STATION';\nconst SET_SAMPLING = 'SET_SAMPLING';\nconst SET_DATATYPE = 'SET_DATATYPE';\nconst SET_FORMAT = 'SET_FORMAT';\nconst SET_DATE = 'SET_DATE';\n/**\n * Reducer for param setting\n * @param {*} state - previous state\n * @param {*} action - action dispatched\n */\nconst paramReducer = (state, action) => {\n  switch (action.type) {\n    case SET_SOURCE:\n      return { ...state, source: action.payload };\n    case SET_STATION:\n      return { ...state, station: action.payload };\n    case SET_SAMPLING:\n      return { ...state, sampling: action.payload };\n    case SET_DATATYPE:\n      return { ...state, dataType: action.payload };\n    case SET_FORMAT:\n      return { ...state, format: action.payload };\n    case SET_DATE:\n      return { ...state, date: action.payload };\n    default:\n      throw new Error();\n  }\n}\n\n\n/**\n * React Hook - Fetch IAGA2002 from the web and parse the content\n */\nconst useDataApi = (initialParams) => {\n  const [params, dispatchParams] = useReducer(paramReducer, Object.assign({\n    source: '',\n    station: '',\n    sampling: 60,\n    dataType: 'variation',\n    format: 'IAGA2002',\n    date: moment(),\n  }, initialParams));\n\n  const [state, dispatchFetch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: new libs.GeomagneticData(),\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatchFetch({ type: FETCH_INIT });\n      for (const url of buildUrl(params)) {\n        try {\n          let result = await axios(url);\n          if (!didCancel) {\n            dispatchFetch({ type: FETCH_SUCCESS, payload: libs.parseIAGA2002(result.data) });\n            break;\n          }\n        } catch (error) {\n          continue;\n        }\n        // if we have reach this stage, it means all attempts failed\n        if (!didCancel) {\n          dispatchFetch({ type: FETCH_FAILURE });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [params]);\n\n  const actions = {\n    setSource: source => dispatchParams({type: SET_SOURCE, payload: source}),\n    setStation: station => dispatchParams({type: SET_STATION, payload: station}),\n    setSampling: sampling => dispatchParams({type: SET_SAMPLING, payload: sampling}),\n    setDataType: dataType => dispatchParams({type: SET_DATATYPE, payload: dataType}),\n    setFormat: format => dispatchParams({type: SET_FORMAT, payload: format}),\n    setDate: date => dispatchParams({type: SET_DATE, payload: date}),\n  }\n\n  return { ...state, ...params, ...actions };\n};\n\nexport default useDataApi;","/**\n * @author Charles Blais <charles.blais@canada.ca>\n * \n * Plotting of geomagnetic data\n */\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\n\nimport './App.css';\nimport GeomagneticForm from './components/GeomagneticForm';\nimport GeomagneticPlot from './components/GeomagneticPlot';\nimport GeomagneticDetails from './components/GeomagneticDetails';\n\n// Hooks\nimport useDataApi from './hooks/useDataApi';\n\nconst App = () => {\n  const [ components, setComponents ] = useState(['x','y','z'])\n  const {\n    data,\n    station,\n    setStation,\n    sampling,\n    setSampling,\n    dataType,\n    setDataType,\n    date,\n    setDate,\n  } = useDataApi({\n    source: 'https://origin1.geomag.nrcan.gc.ca/intermagnet/data/',\n    station: 'ott',\n    date: moment(),\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n        <GeomagneticForm\n          station={station}\n          setStation={setStation}\n          sampling={sampling}\n          setSampling={setSampling}\n          dataType={dataType}\n          setDataType={setDataType}\n          date={date}\n          setDate={setDate}\n          components={components}\n          setComponents={setComponents}\n        />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n        { data.isEmpty\n          ? (\n            <div>Loading...</div>\n          ):(\n            <React.Fragment>\n              <GeomagneticPlot\n                data={data}\n                components={components}\n              />\n              <GeomagneticDetails data={data} />\n            </React.Fragment>\n          )\n        }    \n        </Col>\n      </Row>  \n    </Container>\n  )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}